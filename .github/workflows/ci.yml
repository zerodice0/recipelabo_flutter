name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.0'
        channel: 'stable'
        
    - name: Create .env file
      env:
        ANDROID_BANNER_AD_ID: ${{ secrets.SAUCERER_ANDROID_BANNER_AD_ID }}
        IOS_BANNER_AD_ID: ${{ secrets.SAUCERER_IOS_BANNER_AD_ID }}
        GOOGLE_SHEETS_API_KEY: ${{ secrets.SAUCERER_GOOGLE_SHEETS_API_KEY }}
      run: |
        echo "# Saucerer Flutter 프로젝트 환경변수" > .env
        echo "# GitHub Actions에서 자동 생성됨" >> .env
        echo "" >> .env
        echo "# AdMob 광고 ID 설정" >> .env
        echo "SAUCERER_ANDROID_BANNER_AD_ID=${ANDROID_BANNER_AD_ID}" >> .env
        echo "SAUCERER_IOS_BANNER_AD_ID=${IOS_BANNER_AD_ID}" >> .env
        echo "" >> .env
        echo "# 테스트 광고 ID (Google에서 제공하는 공용 테스트 ID)" >> .env
        echo "SAUCERER_TEST_ANDROID_BANNER_AD_ID=ca-app-pub-3940256099942544/6300978111" >> .env
        echo "SAUCERER_TEST_IOS_BANNER_AD_ID=ca-app-pub-3940256099942544/2934735716" >> .env
        echo "" >> .env
        echo "# Google Sheets API 설정 (번역 관리용)" >> .env
        echo "SAUCERER_GOOGLE_SHEETS_API_KEY=${GOOGLE_SHEETS_API_KEY}" >> .env
        echo "" >> .env
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Verify the .env file was created
      run: |
        echo "✅ .env 파일이 생성되었습니다:"
        ls -la .env
        echo ""
        echo "📋 .env 파일 내용 (민감한 정보 제외):"
        grep -v "GOOGLE_SERVICE_ACCOUNT_JSON\|ANDROID_BANNER_AD_ID\|IOS_BANNER_AD_ID\|GOOGLE_SHEETS_API_KEY" .env || echo "모든 내용이 민감한 정보입니다."
        
    - name: Analyze project source
      run: flutter analyze
      
    - name: Run tests
      run: flutter test

  update-translations:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Dart
      uses: dart-lang/setup-dart@v1
      with:
        sdk: stable
        
    - name: Create .env file
      run: |
        echo "# Saucerer Flutter 프로젝트 환경변수" > .env
        echo "SAUCERER_GOOGLE_SERVICE_ACCOUNT_JSON=${{ secrets.SAUCERER_GOOGLE_SERVICE_ACCOUNT_JSON }}" >> .env
        
    - name: Get dependencies
      run: dart pub get
      
    - name: Update translations from Google Sheets
      run: |
        echo "🌍 Google Sheets에서 번역 업데이트 중..."
        dart scripts/update_translations.dart || echo "⚠️ 번역 업데이트 실패 (선택사항)"
        
    - name: Commit updated translations
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add lib/l10n/
        git diff --staged --quiet || git commit -m "chore: 번역 파일 자동 업데이트

        🤖 GitHub Actions에서 Google Sheets 번역 데이터를 기반으로 ARB 파일을 자동 업데이트했습니다.
        
        Co-authored-by: GitHub Actions <action@github.com>"
        git push || echo "📝 업데이트할 번역이 없습니다."